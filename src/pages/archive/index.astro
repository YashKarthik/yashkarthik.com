---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from 'astro:content';

let years: number[] = [];
for (let i=new Date().getFullYear(); i > 2020; i--) {
  years.push(i);
}

const allBlogPosts = await getCollection('blog');
allBlogPosts.sort((a, b) => (
  (new Date(a.data.started)) < (new Date(b.data.started)) ? 1 : -1
));
---

<Layout title="Writing" description="Archive of all essays written by Yash Karthik">
  <main class="self-center font-serif
  lg:w-6/12 md:w-8/12 sm:w-9/12 w-10/12 max-w-none
  mt-7
  ">

    <header class="
    items-start text-start 
    mb-7 
    ">
      <h1 class="
      md:text-5xl sm:text-4xl text-3xl 
      font-heading tracking-tight
      ">
        Writing
      </h1>

      <p class="mt-1 text-md italic">
        I write about programming, technology,
        physics, and even some sci-fi.
      </p>
    </header>

    <article class="">
      {years.map(year => (
        <section>
          <h2 class="text-3xl mt-5 font-black">{year}</h2>

          <div class="flex flex-col">
            {allBlogPosts.map(({ data, slug}) => {
              if (new Date(data.started).getFullYear() == year) {
                return <div class="
                group ml-5 my-3 w-fit
                flex flex-row items-center gap-2
                ">
                  <a href={"/archive/" + slug} class="
                  text-lg
                  hover:underline underline-offset-2 decoration-2 
                  decoration-violet-700 dark:decoration-violet-400 
                  ">
                    {data.title}
                  </a>

                  <a target="_blank" title="Page history" href="https://github.com/yashkarthik/yashkarthik.xyz" class="
                  text-sm italic text-zinc-500 dark:text-zinc-400
                  hover:underline underline-offset-2 decoration-2 decoration-dotted
                  decoration-violet-700 dark:decoration-violet-400 
                  ">
                    {data.started.slice(0, data.started.length - 6) }{data.updated && ', '}
                    {data.updated?.slice(0, data.started.length - 6)}
                  </a>
                </div>
              }
            })
            }
          </div>

        </section>
      ))}
    </article>
  </main>
</Layout>
