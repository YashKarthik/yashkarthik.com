---
import "@fontsource/source-serif-pro/";
import "@fontsource/source-serif-pro/600.css";
import "@fontsource/source-serif-pro/700.css";
import "@fontsource/inter";
import "@fontsource/spline-sans-mono/variable.css";

import "@fontsource/gilda-display";
import "@fontsource/cormorant/variable.css"
import "@fontsource/sofia-sans-extra-condensed/800.css"

export interface Props {
  title: string;
  image_url?: string;
  description?: string;
}
const { title, image_url, description } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <title>{title + " • yashkarthik.xyz"}</title>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description ? description : "Essays by yashKarthik—programming, physics and culture"}/>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <meta name="robots" content="all" />
    <meta name="og:title" content={title + " | Yash Karthik"} />
    <meta name="og:description" content={description ? description : "Essays by yashKarthik—programming, physics and culture"} />
    <meta name="og:type" content='blog' />
    <meta name="og:image" content={image_url ? image_url : "https://yashkarthik.xyz/thelatenightbuilders.png"} />
    <meta name="og:url" content='https://yashkarthik.xyz' />
    <meta name="twitter:site" content="@_yashKarthik" />

    <slot name="head-metadata" />

    <script>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
          return 'light';
      })();
          
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
    
      // @ts-ignore
      window.localStorage.setItem('theme', theme);
    
      const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");
        
        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      }
    
      // @ts-ignore
      document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
    </script>

  </head>
  <body 
    class="
    flex flex-col min-h-[100vh] 
    text-zinc-700 dark:text-stone-300
    dark:bg-zinc-900
    selection:bg-violet-200 dark:selection:bg-violet-300 dark:selection:text-zinc-700
    scroll-smooth
  "
  >
    <nav class="flex flex-row justify-between m-3">
      <a href="/" class="flex flex-row group ml-2 text-3xl font-black font-logo text-black dark:text-white">
        yk <p class="group-hover:text-violet-700 dark:group-hover:text-violet-400">.</p>
      </a>
      <div class=" flex-none ">
        <ul class="flex flex-row gap-3 text-sm">
          {[
            ["Writing", "/archive"],
            ["About", "/about"],
          ].map(linkObj => (
            <li class="
              underline underline-offset-4 decoration-2 decoration-dotted
              decoration-zinc-400 dark:decoration-zinc-500
              hover:decoration-violet-700 dark:hover:decoration-violet-400
            ">
              <a href={linkObj[1]}>
                {linkObj[0]}
              </a>
            </li>
          ))}

          <li>
            <button id="rss-copy-button" class="
            underline underline-offset-4 decoration-2 decoration-dotted
            decoration-zinc-400 dark:decoration-zinc-500
            hover:decoration-violet-700 dark:hover:decoration-violet-400
            ">
             RSS
            </button>
          </li>

          <li class="font-serif">
            <button id="themeToggle" class="hover:fill-violet-700 dark:hover:fill-violet-300">
              <svg width="12" height="12" class="hover:fill-violet-700 dark:hover:fill-violet-300"xmlns="http://www.w3.org/2000/svg" viewBox="0 0 11 9">
                <path class="fill-transparent dark:fill-zinc-300 hover:fill-transparent hover:dark:fill-violet-300" d="M6 3C4.62 3 3.5 4.12 3.5 5.5C3.5 6.88 4.62 8 6 8C7.38 8 8.5 6.88 8.5 5.5C8.5 4.12 7.38 3 6 3ZM1 6H2C2.275 6 2.5 5.775 2.5 5.5C2.5 5.225 2.275 5 2 5H1C0.725 5 0.5 5.225 0.5 5.5C0.5 5.775 0.725 6 1 6ZM10 6H11C11.275 6 11.5 5.775 11.5 5.5C11.5 5.225 11.275 5 11 5H10C9.725 5 9.5 5.225 9.5 5.5C9.5 5.775 9.725 6 10 6ZM5.5 0.5V1.5C5.5 1.775 5.725 2 6 2C6.275 2 6.5 1.775 6.5 1.5V0.5C6.5 0.225 6.275 0 6 0C5.725 0 5.5 0.225 5.5 0.5ZM5.5 9.5V10.5C5.5 10.775 5.725 11 6 11C6.275 11 6.5 10.775 6.5 10.5V9.5C6.5 9.225 6.275 9 6 9C5.725 9 5.5 9.225 5.5 9.5ZM2.995 1.79C2.8 1.595 2.48 1.595 2.29 1.79C2.095 1.985 2.095 2.305 2.29 2.495L2.82 3.025C3.015 3.22 3.335 3.22 3.525 3.025C3.715 2.83 3.72 2.51 3.525 2.32L2.995 1.79ZM9.18 7.975C8.985 7.78 8.665 7.78 8.475 7.975C8.28 8.17 8.28 8.49 8.475 8.68L9.005 9.21C9.2 9.405 9.52 9.405 9.71 9.21C9.905 9.015 9.905 8.695 9.71 8.505L9.18 7.975ZM9.71 2.495C9.905 2.3 9.905 1.98 9.71 1.79C9.515 1.595 9.195 1.595 9.005 1.79L8.475 2.32C8.28 2.515 8.28 2.835 8.475 3.025C8.67 3.215 8.99 3.22 9.18 3.025L9.71 2.495ZM3.525 8.68C3.72 8.485 3.72 8.165 3.525 7.975C3.33 7.78 3.01 7.78 2.82 7.975L2.29 8.505C2.095 8.7 2.095 9.02 2.29 9.21C2.485 9.4 2.805 9.405 2.995 9.21L3.525 8.68Z"></path>
                <path class="fill-zinc-700 dark:fill-transparent hover:fill-violet-700 dark:hover:fill-transparent" d="M5 0.5C2.515 0.5 0.5 2.515 0.5 5C0.5 7.485 2.515 9.5 5 9.5C7.485 9.5 9.5 7.485 9.5 5C9.5 4.77 9.48 4.54 9.45 4.32C8.96 5.005 8.16 5.45 7.25 5.45C5.76 5.45 4.55 4.24 4.55 2.75C4.55 1.845 4.995 1.04 5.68 0.55C5.46 0.52 5.23 0.5 5 0.5Z"></path>
              </svg>
            </button>

          </li>

        </ul>
      </div>
    </nav>

    <slot />

    <footer class="
    text-xs mt-14 mb-1
    self-center flex flex-col text-center
    lg:w-8/12 md:w-9/12 sm:w-10/12 w-11/12 max-w-none
    ">
      <section class="
        flex flex-row justify-center gap-2
        text-sm mb-5
      ">
        {[
          ["Twitter", "https://twitter.com/_yashkarthik"],
          ["Github", "https://github.com/yashkarthik"],
          ["Farcaster", "https://warpcast.com/yashkarthik"],
          ["Writing", "/archive"],
        ].map((linkObj) => (
          <a href={linkObj[1]}
            target={linkObj[1].slice(0,4) == "http" ? "_blank" : "_self"}
            class="
            underline underline-offset-2 decoration-2 decoration-dotted
            decoration-zinc-400 dark:decoration-zinc-500
            hover:decoration-violet-700 dark:hover:decoration-violet-400
          ">{linkObj[0]}</a>
          <p class="text-zinc-400 dark:text-zinc-500">//</p>
        ))}
        <button id="rss-copy-button" class="
        underline underline-offset-2 decoration-2 decoration-dotted
        decoration-zinc-400 dark:decoration-zinc-500
        hover:decoration-violet-700 dark:hover:decoration-violet-400
        ">
         RSS
        </button>
      </section>

      <p>
        All text licensed under
        <a href="/copyright" class="
        underline underline-offset-2 decoration-2 decoration-dotted
        decoration-zinc-400 dark:decoration-zinc-500
        hover:decoration-violet-700 dark:hover:decoration-violet-400
        ">
          CC BY 4.0
        </a>
      </p>
    </footer>

  </body>
</html>

<script>
  const rssCopyButton = document.querySelectorAll("button#rss-copy-button");
  rssCopyButton.forEach((r) => {
    r!.addEventListener("click", () => {
      navigator.clipboard.writeText("https://www.yashkarthik.xyz/rss.xml");
      r!.firstChild!.nodeValue = "copied!"
      setTimeout(() => {
        r!.firstChild!.nodeValue = "RSS";
      }, 1000);
    });
  })
</script>
