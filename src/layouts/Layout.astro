---
import "@fontsource/source-serif-pro/";
import "@fontsource/source-serif-pro/600.css";
import "@fontsource/source-serif-pro/700.css";

import "@fontsource/gilda-display";
import "@fontsource/cormorant/variable.css"
import "@fontsource/sofia-sans-extra-condensed/800.css"

import { colorVariants } from "../colors.ts"

export interface Props {
  title: string;
  image_url?: string;
  description?: string;
  showBars?: boolean;
  route: string;
}
const { title, image_url, description, showBars, route, colorVariant } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <title>{title + " â€¢ yashkarthik.xyz"}</title>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description || "Yash Karthik's digital garden filled with essays on programming, physics and humans."}/>
    <meta name="og:image" content={"https://www.yashkarthik.xyz/" + image_url || "ogImage.png"}>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

    
    <meta name="robots" content="all" />
    <meta name="og:title" content={title + " | Yash Karthik"} />
    <meta name="og:description" content={description || "Yash Karthik's digital garden filled with essays on programming, physics and humans."} />
    <meta name="og:type" content='blog' />
    <meta name="og:url" content='https://www.yashkarthik.xyz' />
    <meta name="og:image" content={"https://www.yashkarthik.xyz/" + image_url || "ogImage.png"}>
    <meta name="twitter:site" content="@_yashKarthik" />

    <slot name="head-metadata" />

    <script>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
          return 'light';
      })();
          
      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }
    
      // @ts-ignore
      window.localStorage.setItem('theme', theme);
    
      const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");
        
        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
      }
    
      // @ts-ignore
      document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
    </script>

    <style>

      @font-face {
        font-family: 'Geist';
        src: url('/fonts/GeistVariableVF.woff2') format('woff2');
        font-weight: normal;
        font-style: normal;
        font-display: swap;
      }

      @font-face {
        font-family: 'Geist Mono';
        src: url('/fonts/GeistMonoVariableVF.woff2') format('woff2');
        font-style: normal;
        font-display: swap;
      }

    </style>

  </head>
  <body class={`
    mb-7 flex flex-col min-h-screen 
    text-zinc-700 dark:text-zinc-300
    ${colorVariants[colorVariant].selection}
    scroll-smooth
    font-normal
    ${showBars == false ? "dark:bg-black": "dark:bg-zinc-950"}
    transition-colors duration-100 ease-in-out
  `}>
    <nav class={`flex flex-row justify-between m-3 ${showBars == false && "hidden"}`}>
      <a href="/" class="flex flex-row group ml-2 text-3xl font-black font-logo text-black dark:text-white">
        yk <p class={`${colorVariants[colorVariant].groupHoverText} transition-colors duration-200 ease-in-out`}>.</p>
      </a>
      <div class=" flex-none ">
        <ul class="text-right flex flex-col gap-1 text-sm">
          {[
            ["Twitter", "https://twitter.com/_yashkarthik"],
            ["Projects", "/projects"],
          ].map(linkObj => (
            <li class={`
              font-sans
              text-zinc-400 hover:text-zinc-500
              dark:text-zinc-500 dark:hover:text-zinc-400
              transition-colors duration-200 ease-in-out
            `}>
              <a href={linkObj[1]} target={linkObj[1].slice(0,4) == "http" ? "_blank" : "_self"}>
                {linkObj[0]}
              </a>
            </li>
          ))}

          <li class="font-serif">
            <button id="themeToggle" class={`
              font-sans
              text-zinc-400 hover:text-zinc-500
              dark:text-zinc-500 dark:hover:text-zinc-400
              transition-colors duration-200 ease-in-out
            `}>
              Color Scheme
            </button>
          </li>

        </ul>
      </div>
    </nav>

    <slot />

  </body>
</html>

<script>
  const rssCopyButton = document.querySelectorAll("button#rss-copy-button");
  rssCopyButton.forEach((r) => {
    r!.addEventListener("click", () => {
      navigator.clipboard.writeText("https://www.yashkarthik.xyz/rss.xml");
      r!.firstChild!.nodeValue = "copied!"
      setTimeout(() => {
        r!.firstChild!.nodeValue = "RSS";
      }, 1000);
    });
  })
</script>
